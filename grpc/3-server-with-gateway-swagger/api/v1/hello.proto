syntax = "proto3";

package api.v1;

option go_package = "api/v1/greeter";

import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "RK Swagger for gRPC";
    version: "1.0";
    description: "This is greeter service bootstrapped with rk-boot.";
    terms_of_service: "http://swagger.io/terms/";
    contact: {
      name: "API Support";
      url: "http://www.swagger.io/support";
      email: "support@swagger.io";
    };
    license: {
      name: "MIT";
      url: "https://github.com/rookie-ninja/rk-demo/blob/master/LICENSE.txt";
    };
  };
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
  security_definitions: {
    security: {
      key: "BasicAuth";
      value: {
        type: TYPE_BASIC;
      }
    }
  }
  security: {
    security_requirement: {
      key: "BasicAuth";
      value: {};
    }
  }
};

service Greeter {
  rpc SayHello (HelloRequest) returns (HelloResponse) {}
}

message HelloRequest {
  string name = 1;
}

message HelloResponse {
  string message = 1;
}