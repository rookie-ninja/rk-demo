syntax = "proto3";

package api.v1;

option go_package = "api/v1/greeter";

import "rk/sw.proto";

//import "protoc-gen-openapiv2/options/annotations.proto";
//
//option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
//  info: {
//    title: "A Bit of Everything";
//    version: "1.0";
//    contact: {
//      name: "gRPC-Gateway project";
//      url: "https://github.com/grpc-ecosystem/grpc-gateway";
//      email: "none@example.com";
//    };
//    license: {
//      name: "BSD 3-Clause License";
//      url: "https://github.com/grpc-ecosystem/grpc-gateway/blob/master/LICENSE.txt";
//    };
//    extensions: {
//      key: "x-something-something";
//      value {
//        string_value: "yadda";
//      }
//    }
//  };
//  // Overwriting host entry breaks tests, so this is not done here.
//  external_docs: {
//    url: "https://github.com/grpc-ecosystem/grpc-gateway";
//    description: "More about gRPC-Gateway";
//  }
//  schemes: HTTP;
//  schemes: HTTPS;
//  schemes: WSS;
//  consumes: "application/json";
//  consumes: "application/x-foo-mime";
//  produces: "application/json";
//  produces: "application/x-foo-mime";
//  security_definitions: {
//    security: {
//      key: "BasicAuth";
//      value: {
//        type: TYPE_BASIC;
//      }
//    }
//    security: {
//      key: "ApiKeyAuth";
//      value: {
//        type: TYPE_API_KEY;
//        in: IN_HEADER;
//        name: "X-API-Key";
//        extensions: {
//          key: "x-amazon-apigateway-authtype";
//          value {
//            string_value: "oauth2";
//          }
//        }
//        extensions: {
//          key: "x-amazon-apigateway-authorizer";
//          value {
//            struct_value {
//              fields {
//                key: "type";
//                value {
//                  string_value: "token";
//                }
//              }
//              fields {
//                key: "authorizerResultTtlInSeconds";
//                value {
//                  number_value: 60;
//                }
//              }
//            }
//          }
//        }
//      }
//    }
//    security: {
//      key: "OAuth2";
//      value: {
//        type: TYPE_OAUTH2;
//        flow: FLOW_ACCESS_CODE;
//        authorization_url: "https://example.com/oauth/authorize";
//        token_url: "https://example.com/oauth/token";
//        scopes: {
//          scope: {
//            key: "read";
//            value: "Grants read access";
//          }
//          scope: {
//            key: "write";
//            value: "Grants write access";
//          }
//          scope: {
//            key: "admin";
//            value: "Grants read and write access to administrative information";
//          }
//        }
//      }
//    }
//  }
//  security: {
//    security_requirement: {
//      key: "BasicAuth";
//      value: {};
//    }
//    security_requirement: {
//      key: "ApiKeyAuth";
//      value: {};
//    }
//  }
//  security: {
//    security_requirement: {
//      key: "OAuth2";
//      value: {
//        scope: "read";
//        scope: "write";
//      }
//    }
//    security_requirement: {
//      key: "ApiKeyAuth";
//      value: {};
//    }
//  }
//  responses: {
//    key: "403";
//    value: {
//      description: "Returned when the user does not have permission to access the resource.";
//    }
//  }
//  responses: {
//    key: "404";
//    value: {
//      description: "Returned when the resource does not exist.";
//      schema: {
//        json_schema: {
//          type: STRING;
//        }
//      }
//    }
//  }
//  responses: {
//    key: "418";
//    value: {
//      description: "I'm a teapot.";
//      schema: {
//        json_schema: {
//          ref: ".grpc.gateway.examples.internal.proto.examplepb.NumericEnum";
//        }
//      }
//    }
//  }
//  responses: {
//    key: "500";
//    value: {
//      description: "Server error";
//      headers: {
//        key: "X-Correlation-Id"
//        value: {
//          description: "Unique event identifier for server requests"
//          type: "string"
//          format: "uuid"
//          default: "\"2438ac3c-37eb-4902-adef-ed16b4431030\""
//          pattern: "^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$"
//        }
//      };
//      schema: {
//        json_schema: {
//          ref: ".grpc.gateway.examples.internal.proto.examplepb.ErrorResponse";
//        }
//      }
//    }
//  }
//  extensions: {
//    key: "x-grpc-gateway-foo";
//    value {
//      string_value: "bar";
//    }
//  }
//  extensions: {
//    key: "x-grpc-gateway-baz-list";
//    value {
//      list_value: {
//        values: {
//          string_value: "one";
//        }
//        values: {
//          bool_value: true;
//        }
//      }
//    }
//  }
//};

service Greeter {
  rpc SayHello (HelloRequest) returns (HelloResponse) {}
}

message HelloRequest {
  string name = 1;
}

message HelloResponse {
  string message = 1;
}